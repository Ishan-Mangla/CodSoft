#include <iostream>
#include <cstdlib> // For rand() and srand()
#include <ctime>   // For time() to seed rand()
#include <chrono>  // For timing the game

using namespace std;

// Function to print motivational messages after wrong guesses
void printMotivationalMessage(int attempts) {
    switch (attempts) {
        case 3: 
            cout << "Don't give up, you're close!" << endl;
            break;
        case 5:
            cout << "Keep going! The number isn't that far off!" << endl;
            break;
        case 7:
            cout << "You got this, believe in yourself!" << endl;
            break;
        default:
            cout << "You're doing great, keep trying!" << endl;
            break;
    }
}

int main() {
    srand(time(0)); // Seed random number generator with current time

    int difficulty, maxNumber, randomNumber;
    int userGuess, attempts = 0;

    // Start the timer to track how fast the user guesses
    auto start = chrono::high_resolution_clock::now();

    // Dynamic difficulty level selection
    cout << "Welcome to the Number Guessing Game!" << endl;
    cout << "Choose a difficulty level:" << endl;
    cout << "1. Easy (1-50)" << endl;
    cout << "2. Medium (1-100)" << endl;
    cout << "3. Hard (1-500)" << endl;
    cout << "Enter your choice (1/2/3): ";
    cin >> difficulty;

    // Set the maximum range based on the difficulty level
    switch (difficulty) {
        case 1: 
            maxNumber = 50;
            cout << "You chose Easy! I've picked a number between 1 and 50." << endl;
            break;
        case 2:
            maxNumber = 100;
            cout << "You chose Medium! I've picked a number between 1 and 100." << endl;
            break;
        case 3:
            maxNumber = 500;
            cout << "You chose Hard! I've picked a number between 1 and 500." << endl;
            break;
        default:
            maxNumber = 100;
            cout << "Invalid choice, defaulting to Medium. Guess a number between 1 and 100!" << endl;
            break;
    }

    randomNumber = rand() % maxNumber + 1; // Generate random number based on chosen difficulty

    // Main guessing loop
    while (true) {
        cout << "\nEnter your guess: ";
        cin >> userGuess;
        attempts++; // Increment the number of attempts

        if (userGuess > randomNumber) {
            cout << "Too high! Try again." << endl;
        } else if (userGuess < randomNumber) {
            cout << "Too low! Try again." << endl;
        } else {
            // End the timer when the correct number is guessed
            auto end = chrono::high_resolution_clock::now();
            chrono::duration<double> elapsed = end - start;

            cout << "ðŸŽ‰ Congratulations! You guessed the correct number!" << endl;
            cout << "It took you " << attempts << " attempts and " << elapsed.count() << " seconds." << endl;
            break;
        }

        // Motivational or funny message based on number of attempts
        printMotivationalMessage(attempts);

        // Additional hint after 5 incorrect attempts
        if (attempts == 5) {
            if (randomNumber % 2 == 0) {
                cout << "Hint: The number is even." << endl;
            } else {
                cout << "Hint: The number is odd." << endl;
            }
        }

        // Creative hint: If the user is really off, give a warmer/colder hint
        if (attempts > 3 && abs(userGuess - randomNumber) > maxNumber / 4) {
            cout << "Hint: You're way off! Try guessing in a different range!" << endl;
        }
    }

    cout << "Thanks for playing! See you next time. ðŸŒŸ" << endl;

    return 0;
}
