#include <iostream>
using namespace std;

char board[3][3] = { {'1', '2', '3'}, {'4', '5', '6'}, {'7', '8', '9'} };
char current_marker;
int current_player;

void displayBoard() {
    cout << "\n";
    cout << " " << board[0][0] << " | " << board[0][1] << " | " << board[0][2] << "\n";
    cout << "---|---|---\n";
    cout << " " << board[1][0] << " | " << board[1][1] << " | " << board[1][2] << "\n";
    cout << "---|---|---\n";
    cout << " " << board[2][0] << " | " << board[2][1] << " | " << board[2][2] << "\n\n";
}

bool placeMarker(int slot) {
    int row = (slot - 1) / 3;
    int col = (slot - 1) % 3;

    if (board[row][col] != 'X' && board[row][col] != 'O') {
        board[row][col] = current_marker;
        return true;
    } else {
        return false;
    }
}

int checkWinner() {
    // Rows
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2])
            return current_player;
    }
    // Columns
    for (int i = 0; i < 3; i++) {
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i])
            return current_player;
    }
    // Diagonals
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2])
        return current_player;
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0])
        return current_player;

    return 0; // No winner yet
}

void switchPlayer() {
    current_player = (current_player == 1) ? 2 : 1;
    current_marker = (current_marker == 'X') ? 'O' : 'X';
}

bool isBoardFull() {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] != 'X' && board[i][j] != 'O') {
                return false;
            }
        }
    }
    return true;
}

void resetBoard() {
    char reset_char = '1';
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            board[i][j] = reset_char++;
        }
    }
}

int main() {
    char play_again;
    do {
        current_player = 1;
        current_marker = 'X';
        resetBoard();

        cout << "Welcome to Tic-Tac-Toe!\n";
        int winner = 0;
        bool draw = false;

        for (int i = 0; i < 9 && !winner; i++) {
            displayBoard();
            int slot;
            cout << "Player " << current_player << " (" << current_marker << "), choose your slot: ";
            cin >> slot;

            if (slot < 1 || slot > 9 || !placeMarker(slot)) {
                cout << "Invalid move, try again.\n";
                i--; // retry current player's turn
                continue;
            }

            winner = checkWinner();
            if (!winner) {
                draw = isBoardFull();
                if (draw) break;
                switchPlayer();
            }
        }

        displayBoard();
        if (winner) {
            cout << "🎉 Player " << current_player << " (" << current_marker << ") wins! 🎉\n";
        } else {
            cout << "It's a draw! 😐\n";
        }

        cout << "Do you want to play again? (Y/N): ";
        cin >> play_again;

    } while (play_again == 'Y' || play_again == 'y');

    cout << "Thanks for playing Tic-Tac-Toe! 👋\n";
    return 0;
}
